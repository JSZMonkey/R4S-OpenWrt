From 36252b56d65b621d40ad92c31f956804e9f32b4e Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 14 Mar 2021 17:28:24 +0800
Subject: [PATCH] sched/alt: Fix limited cpufreq for schedutil.

Here is the first fix for #12, which fix the limited cpufreq for
schedutil. But it still tend to stay at max cpufreq.

(cherry picked from commit c02fa43b72f3d3917717e4ab40a742d4550db45a)

Note: the cherry-pick process involved converting sugov_get_util back
to an unsigned long as it should be in 5.10.46. Also, the struct
sugov_cpu doesn't have the util member in 5.10.46, it returns this
value instead - this was corrected in this commit.
---
 kernel/sched/cpufreq_schedutil.c | 11 ++++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/cpufreq_schedutil.c b/kernel/sched/cpufreq_schedutil.c
index 2faae37f4820..37f4166f1a56 100644
--- a/kernel/sched/cpufreq_schedutil.c
+++ b/kernel/sched/cpufreq_schedutil.c
@@ -304,8 +304,11 @@
 #else /* CONFIG_SCHED_BMQ */
 static unsigned long sugov_get_util(struct sugov_cpu *sg_cpu)
 {
-	sg_cpu->max = arch_scale_cpu_capacity(sg_cpu->cpu);
-	return sg_cpu->max;
+	unsigned long max = arch_scale_cpu_capacity(sg_cpu->cpu);
+
+	sg_cpu->max = max;
+	sg_cpu->bw_dl = 0;
+	return cpu_rq(sg_cpu->cpu)->nr_running ? max:0UL;
 }
 #endif
 
@@ -453,8 +456,8 @@
 {
 #ifndef CONFIG_SCHED_BMQ
 	if (cpu_bw_dl(cpu_rq(sg_cpu->cpu)) > sg_cpu->bw_dl)
-#endif
 		sg_policy->limits_changed = true;
+#endif
 }
 
 static void sugov_update_single(struct update_util_data *hook, u64 time,

